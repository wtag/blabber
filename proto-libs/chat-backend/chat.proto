syntax = "proto3";

import "Model/user.proto";

package ChatService;

message Message {
  int64 id = 1;
  string timestamp = 2;
  string tenant = 3;
  string roomUid = 4;
  string text = 5;
  string senderId = 6;
  string senderName = 7;
  bool isCustomer = 8;
  repeated Model.User users = 9;
  repeated Model.User mentionedUsers = 10;
}

message MessageList {
  repeated Message messages = 1;
}

message SendMessageResponse {
  bool sent = 1;
}

message Room {
  int64 id = 1;
  string uid = 2;
  string type = 3;
  string title = 4;
  string tenant = 5;
  repeated Model.User users = 6;
  string lastSeenMessageTimestamp = 7;
  repeated MessageSeen messageSeens = 8;
  repeated Mention mentions = 9;
  string lastMessage = 10;
}

message RoomCategory {
  string title = 1;
  string type = 2;
  repeated Room rooms = 3;
}

message RoomCategoryList {
  string tenant = 1;
  repeated RoomCategory roomCategories = 2;
}

message Empty {

}

message AccessToken {
  string token = 1;
}

message Mention {
  int64 id = 1;
  int64 messageId = 2;
  string roomUid = 3;
  int64 userId = 4;
  string status = 5;
  string tenant = 6;
}

message MessageSeen {
  int64 id = 1;
  int64 messageId = 2;
  string roomUid = 3;
  int64 userId = 4;
  string tenant = 5;
  string status = 6;
  string timestamp = 7;
}

message RemoveMentionRequest {
  string tenant = 1;
  string roomUid = 2;
  Model.User user = 3;
  int64 mentionId = 4;
  int64 messageId = 5;
}

message RemoveMessageSeenRequest {
  string tenant = 1;
  string roomUid = 2;
  Model.User user = 3;
  int64 messageSeenId = 4;
  int64 messageId = 5;
}

message RemoveMentionAndSeenResponse {
  string response = 1;
}

service Chat {
  rpc RetrieveMessages(Room) returns (MessageList) {}
  rpc SendMessage(Message) returns (SendMessageResponse) {}
  rpc RetrieveAvailableRooms(Model.User) returns (RoomCategoryList) {}
  rpc MarkMessageAsSeen(RemoveMessageSeenRequest) returns (RemoveMentionAndSeenResponse) {}
  rpc MarkMentionAsSeen(RemoveMentionRequest) returns (RemoveMentionAndSeenResponse) {}
}

service Authentication {
  rpc RetrieveAccessToken(Model.User) returns (AccessToken) {}
}
